// ============================================================================
// CARAVAN ROAD MARKER SPAWNER MODULE - ULTRA PERFORMANCE OPTIMIZED
// ============================================================================
// This ultra-optimized GPL file uses built-in movement detection for maximum efficiency
// that eliminates frame stuttering while maintaining the visual road marker effect.
//
// PERFORMANCE OPTIMIZATIONS:
// - Uses built-in $IsMoving() function (no position tracking overhead)
// - Removed frequent debug logging (major performance gain)
// - Increased spawn intervals (3-15 seconds) to reduce frequency
// - Built-in movement detection - zero overhead when caravans are stationary
// - Optional debug mode for troubleshooting
//
// INSTALLATION:
// 1. Include this file in your mod's GPL directory
// 2. Replace caravan_birth in appropriate GPL files with the enhanced version below
// 3. Replace caravan_death in appropriate GPL files with the enhanced version below
// 4. Ensure Road_Marker_Desc.xml and Road_Marker_Data.dat are properly configured
//
// RESULT: Caravans spawn road markers ONLY when moving using built-in detection!
//         Maximum performance - no overhead when caravans are stationary.
//
// ============================================================================

// Performance-optimized spawn intervals
expression #road_marker_min_interval 1000  // Minimum
expression #road_marker_max_range 9000   // Additional 
expression #StartTime 100
// Formula: random_interval = #road_marker_min_interval + #road_marker_max_range

// Debug control - set to TRUE only when troubleshooting
expression #enable_debug_logging FALSE

///////////////////////////////////////////////////////////////////////////////
// CORE SPAWNING FUNCTIONS
///////////////////////////////////////////////////////////////////////////////

// Ultra-Optimized Road Marker Spawn Thread - uses built-in movement detection
function road_marker_spawn_thread(agent thisagent)
declare
	agent palace;
	integer next_random_interval;
begin
	// Use built-in movement detection for maximum efficiency
	if ($ismoving(thisagent))
		begin
			palace = $GetTruePalace(thisagent);

			// Check if palace is valid
			if ($isvalidgamepiece(palace))
				begin
		            $spawnunit(thisagent, "RoadMarker", "maxhp");

		            // Conditional debug logging
		            if (#enable_debug_logging)
		            	$debugout(911, "Road marker spawned by moving caravan:", thisagent);
				end
		end

	// Calculate NEXT random interval for the following spawn
	next_random_interval = #road_marker_min_interval + $randomnumber(#road_marker_max_range + 1);

	// Schedule this thread to run again with the new random interval
	$runthread(thisagent's "spawner_script", next_random_interval, thisagent);
end

// Start Road Marker Spawning Thread - ultra-optimized with built-in movement detection
function start_road_marker_spawning(agent thisagent)
declare
begin
	// Add spawner script attribute (no position tracking needed with $IsMoving)
	$addattribute(thisagent, "spawner_script", "function", $road_marker_spawn_thread);

	// Start with longer initial delay to reduce immediate load
	$newthread(thisagent's "spawner_script", #StartTime, thisagent); // Start after 5 seconds

	// Conditional debug logging
	if (#enable_debug_logging)
		$debugout(911, "Road marker spawner initialized for caravan:", thisagent);
end

// Stop Road Marker Spawning Thread - optimized cleanup
function stop_road_marker_spawning(agent thisagent)
declare
begin
	// Kill the custom road marker spawner thread for this caravan
	if ($hasattribute("spawner_script", thisagent))
		begin
			$killthread(thisagent's "spawner_script");

			// Conditional debug logging
			if (#enable_debug_logging)
				$debugout(911, "Road marker spawner stopped for caravan:", thisagent);
		end
end

///////////////////////////////////////////////////////////////////////////////
// ENHANCED CARAVAN_BIRTH FUNCTION
///////////////////////////////////////////////////////////////////////////////
Function Caravan_Birth  (agent ThisAgent)
Declare
	agent		Market, AIRootAgent;
	list 		Markets, tradeposts, buildings;
	list 		Potentials;
	integer	Gold, modifier, divisor;

Begin

	AIRootAgent = $RetrieveAgent ( "GplAIRoot" );

	$ListObjects ( thisagent, "Building", -1, buildings, #MyPlayer );

	Markets = $listtitles ( buildings, "Marketplace" );
	Markets = $ListCompleted ( Markets );

	tradeposts = $listtitles ( buildings, "trading_post" );
	tradeposts = $ListCompleted ( tradeposts );

	$start_road_marker_spawning(thisagent);

	If ( $ListSize ( Markets ) > 0 )
		begin
//			Foreach Market in Markets do
//				begin
//					If ($DistanceBetweenAgents (ThisAgent, Market) > #Min_Dist_to_Market_For_Caravan_Spawn)
//						Potentials << Market;
//				end
			potentials = Markets;

			If ($ListSize (Potentials) > 0)
				begin
					ThisAgent's "Target" = $ListMember (Potentials, 1);
					//ThisAgent's "Target" = $Pick_Closest (ThisAgent, Potentials);
					Gold = $DistanceBetweenAgents (ThisAgent, ThisAgent's "Target") / #caravan_gold_mod;
					gold += $randomnumber(#caravan_random_gold);

					// This section enforces the reducing rate of returns during deathmatch.
  					if ( $HasAttribute ( "Deathmatch_Rules", AIRootAgent ))
						if ( AIRootAgent's "Deathmatch_Rules" == TRUE )
							begin
								modifier = ( #Deathmatch_income_modifier - 1 );
								divisor = ( $listsize ( tradeposts ) + modifier );
								if ( divisor < 1 )
									divisor = 1;
								gold = (( gold * #Deathmatch_income_modifier ) / divisor );
							end

					$SetAttribute (ThisAgent, #ATTRIB_Gold, Gold);
//					$debugout(911,"caravan choose",thisagent's "target","as a target.");
				end

			Else
				begin
					ThisAgent's "Target" = $Parent (ThisAgent);
//					$debugout(911,"Caravan chose parent as target");
				end
		end


	Else
		begin
			ThisAgent's "Target" = $Parent (ThisAgent);
		end

	$playsound(thisagent,"begin");
	$NewThread (ThisAgent's "ActiveScript", #Henchmen_Cycle, ThisAgent);
End

///////////////////////////////////////////////////////////////////////////////
// ROADMARKER BIRTH SCRIPTS
///////////////////////////////////////////////////////////////////////////////
function RoadMarker_birth(agent thisagent)
declare
begin
	// Immediate deletion for performance - no debug logging for frequent calls
	$deletegamepiece(thisagent);

	// Conditional debug logging (only if debugging is enabled)
	if (#enable_debug_logging)
		$debugout(911, "Road marker deleted:", thisagent);
end

///////////////////////////////////////////////////////////////////////////////
// END OF ROAD MARKER SPAWNER MODULE
///////////////////////////////////////////////////////////////////////////////
